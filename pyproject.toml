[tool.poetry]
name = "mcp-atca-security"
version = "0.1.0"
description = "Security Defense System for Modular Context Protocol against Adversarial Tool-Calling Attacks"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "mcp_security"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
redis = "^5.0.1"
aioredis = "^2.0.1"
httpx = "^0.25.0"
numpy = "^1.24.0"
torch = "^2.1.0"
transformers = "^4.35.0"
scikit-learn = "^1.3.0"
pandas = "^2.1.0"
asyncio = "^3.4.3"
websockets = "^12.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
structlog = "^23.2.0"
prometheus-client = "^0.19.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
bandit = "^1.7.5"
safety = "^2.3.5"
pre-commit = "^3.5.0"
isort = "^5.12.0"
pytest-xdist = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=mcp_security --cov-report=html --cov-report=term-missing"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"] 